name: Build native library
on: workflow_dispatch

jobs:
  build-linux-x64:
    strategy:
      matrix:
        cxx_std: [c++17]
    runs-on: ubuntu-latest
    env:
      CXX_STD: ${{ matrix.cxx_std }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libgtk-3-dev libwebkit2gtk-4.0-dev cmake ninja-build libclang-cpp-dev doxygen -y
      - name: Build
        run: cd webview && cmake -G "Ninja Multi-Config" -B build -S . && cmake --build build --config Release
      - uses: actions/upload-artifact@v3
        with:
          name: linux-x64-webview-library
          path: ./build/core/Release/libwebview.so
  build-macos-arm64:
    strategy:
      matrix:
        cxx_std: [c++20]
    runs-on: macos-14
    env:
      CXX_STD: ${{ matrix.cxx_std }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install dependencies
        run: brew install cmake ninja doxygen clang-format
      - name: Build
        run: cd webview && cmake -G "Ninja Multi-Config" -B build -S . && cmake --build build --config Release
      - uses: actions/upload-artifact@v3
        with:
          name: macos-arm64-webview-library
          path: ./build/core/Release/libwebview.dylib
  build-macos-x64:
    strategy:
      matrix:
        cxx_std: [c++20]
    runs-on: macos-13
    env:
      CXX_STD: ${{ matrix.cxx_std }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install dependencies
        run: brew install cmake ninja doxygen clang-format
      - name: Build
        run: cd webview && cmake -G "Ninja Multi-Config" -B build -S . && cmake --build build --config Release
      - uses: actions/upload-artifact@v3
        with:
          name: macos-x64-webview-library
          path: ./build/core/Release/libwebview.dylib
  build-windows-x64-msvc:
    strategy:
      matrix:
        cxx_std: [c++20]
        arch: [x64]
    runs-on: windows-latest
    env:
      CXX_STD: ${{ matrix.cxx_std }}
      TARGET_ARCH: ${{ matrix.arch }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build
        run: cd webview && cmake -G "Ninja Multi-Config" -B build -S . && cmake --build build --config Release
        shell: cmd
      - uses: actions/upload-artifact@v3
        with:
          name: windows-x64-webview-library
          path: ./build/core/Release/webview.dll
  build-windows-x86-msvc:
    strategy:
      matrix:
        cxx_std: [c++20]
        arch: [x86]
    runs-on: windows-latest
    env:
      CXX_STD: ${{ matrix.cxx_std }}
      TARGET_ARCH: ${{ matrix.arch }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build
        run: cd webview && cmake -G "Ninja Multi-Config" -B build -S . && cmake --build build --config Release
        shell: cmd
      - uses: actions/upload-artifact@v3
        with:
          name: windows-x86-webview-library
          path: ./build/core/Release/webview.dll
  push-libraries:
    runs-on: ubuntu-latest
    needs:
      [
        build-linux-x64,
        build-macos-arm64,
        build-macos-x64,
        build-windows-x64-msvc,
        build-windows-x86-msvc,
      ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: linux-x64-webview-library
          path: lib/runtimes/linux-x64/native
      - uses: actions/download-artifact@v3
        with:
          name: windows-x64-webview-library
          path: lib/runtimes/win-x64/native
      - uses: actions/download-artifact@v3
        with:
          name: windows-x86-webview-library
          path: lib/runtimes/win-x86/native
      - uses: actions/download-artifact@v3
        with:
          name: macos-arm64-webview-library
          path: lib/runtimes/osx-arm64/native
      - uses: actions/download-artifact@v3
        with:
          name: macos-x64-webview-library
          path: lib/runtimes/osx-x64/native
      - run: |
          git config --global user.name 'ktlwap Automation Bot'
          git config --global user.email 'ktlwap@users.noreply.github.com'
          git add -A
          git commit -am "Update native libraries"
          git push
